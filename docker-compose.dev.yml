version: '3.9'
services:
  nginx-proxy:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/certs:/etc/nginx/certs/:ro
    networks:
     - chat_app_server
    depends_on:
      - server
    command: [nginx-debug, '-g', 'daemon off;']
  server:
    build: 
      dockerfile: dev.server.Dockerfile
      context: .
    env_file:
      - .env
    networks:
      - chat_app_server
    volumes:
      - ./:/app:ro
    ports:
      - 8080:8080
    depends_on:
      firebase:
        condition: service_started
      mongodb:
        condition: service_healthy
  firebase:
    build:
      dockerfile: firebase.Dockerfile
      context: .
    ports:
      - 4000:4000
    env_file:
      - .env
    networks:
      - chat_app_server
  mongodb:
    image: mongo:5.0
    networks:
      - chat_app_server
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
    networks:
      - chat_app_server
    depends_on:
      mongodb:
        condition: service_healthy

networks:
  chat_app_server: