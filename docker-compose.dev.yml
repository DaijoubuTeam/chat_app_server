version: '3.9'
services:
  nginx-proxy:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/certs:/etc/nginx/certs/:ro
    networks:
     - chat_app_server
    depends_on:
      - server
    command: [nginx-debug, '-g', 'daemon off;']
  server:
    build: 
      dockerfile: Dockerfile.server.dev
      context: .
    env_file:
      - .env.dev
    networks:
      - chat_app_server
    volumes:
      - ./:/app:ro
    depends_on:
      firebase:
        condition: service_started
      mongodb:
        condition: service_healthy
  firebase:
    build:
      dockerfile: Dockerfile.firebase
      context: .
    ports:
      - 4000:4000
      - 9099:9099
      - 9199:9199
    env_file:
      - .env.dev
    networks:
      - chat_app_server
  mongodb:
    image: mongo:5.0
    networks:
      - chat_app_server
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./docker/mongo/:/mongo/:ro
    # ports:
    #   - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 40s
    entrypoint: sh /mongo/script.sh
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/?replicaSet=rs0
    networks:
      - chat_app_server
    depends_on:
      mongodb:
        condition: service_healthy
  elastic-search:
    image: elasticsearch:7.17.7
    environment:
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=https://app.elasticvue.com
      - xpack.security.enabled=false
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - chat_app_server
  monstache:        
    image: rwynn/monstache:latest        
    working_dir: /monstache        
    command: -f /monstache/config.toml        
    volumes:          
        - ./docker/monstache/:/monstache/
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      elastic-search:
        condition: service_started
    networks:
      - chat_app_server

networks:
  chat_app_server: